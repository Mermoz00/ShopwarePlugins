<?php declare(strict_types=1);

namespace BAL\Contact;

use Doctrine\DBAL\Connection;
use Shopware\Core\Framework\DataAbstractionLayer\Indexing\EntityIndexerRegistry;
use Shopware\Core\Framework\Plugin;
use Shopware\Core\Framework\Plugin\Context\ActivateContext;
use Shopware\Core\Framework\Plugin\Context\InstallContext;
use Shopware\Core\Framework\Plugin\Context\UninstallContext;

class Contact extends Plugin
{

    public function activate(ActivateContext $activateContext): void
    {
        $registry = $this->container->get(EntityIndexerRegistry::class);
        $registry->sendIndexingMessage(['product.indexer']);
    }
    public function install(InstallContext $installContext): void
    {
        parent::install($installContext); // TODO: Change the autogenerated stub

    }
    public function uninstall(UninstallContext $uninstallContext): void
    {
        parent::uninstall($uninstallContext);
        if ($uninstallContext->keepUserData()) {
            return;
        }

        $connection = $this->container->get(Connection::class);
        $connection->executeUpdate('DROP TABLE IF EXISTS `bal_contact_product`');
        $connection->executeUpdate('DROP TABLE IF EXISTS `bal_contact`');
        $this->deleteContactColumn($connection);

    }
    public function deleteContactColumn($connection){
        $connection->executeUpdate("set @exist_Check := (
            select count(*) from information_schema.columns
            where TABLE_NAME='product'
            and COLUMN_NAME='contacts'
            and TABLE_SCHEMA='shopware'
            );
            set @sqlstmt := if(@exist_Check>0,'alter table product drop column contacts', 'select ''''') ;
            prepare stmt from @sqlstmt ;
            execute stmt ;");
    }
}
